2025-05-21 10:08:57,560 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-21 10:08:57,560 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-21 10:08:57,560 - __main__ - INFO - CUDA available: True
2025-05-21 10:08:57,560 - __main__ - INFO - CUDA version: 12.1
2025-05-21 10:08:57,581 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-21 10:08:57,581 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-21 10:08:57,581 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-21 10:08:57,581 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-21 10:08:57,583 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-21 10:08:57,583 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 11:24:29,716 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-21 11:24:29,717 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-21 11:24:29,717 - __main__ - INFO - CUDA available: True
2025-05-21 11:24:29,717 - __main__ - INFO - CUDA version: 12.1
2025-05-21 11:24:29,743 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-21 11:24:29,743 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-21 11:24:29,744 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-21 11:25:01,087 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-21 11:25:01,088 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-21 11:25:01,088 - __main__ - INFO - CUDA available: True
2025-05-21 11:25:01,088 - __main__ - INFO - CUDA version: 12.1
2025-05-21 11:25:01,108 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-21 11:25:01,108 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-21 11:25:01,108 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-21 11:25:01,110 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-21 11:25:01,113 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-21 11:25:01,113 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 11:27:46,893 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:27:46] "GET /health HTTP/1.1" 200 -
2025-05-21 11:27:46,900 - __main__ - INFO - Received load_model request
2025-05-21 11:27:46,900 - __main__ - DEBUG - Request data: {'checkpoint_dir': 'D:/gs/bilarf/test_apr29_1/checkpoints/'}
2025-05-21 11:27:46,900 - __main__ - ERROR - Checkpoint directory not found: D:/gs/bilarf/test_apr29_1/checkpoints/
2025-05-21 11:27:46,900 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:27:46] "[33mPOST /load_model HTTP/1.1[0m" 404 -
2025-05-21 11:28:44,548 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:28:44] "GET /health HTTP/1.1" 200 -
2025-05-21 11:28:44,555 - __main__ - INFO - Received load_model request
2025-05-21 11:28:44,555 - __main__ - DEBUG - Request data: {'checkpoint_dir': 'D:/gs/bilarf/test_apr29_1/checkpoints/'}
2025-05-21 11:28:44,555 - __main__ - ERROR - Checkpoint directory not found: D:/gs/bilarf/test_apr29_1/checkpoints/
2025-05-21 11:28:44,555 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:28:44] "[33mPOST /load_model HTTP/1.1[0m" 404 -
2025-05-21 11:29:29,342 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:29:29] "GET /health HTTP/1.1" 200 -
2025-05-21 11:30:02,500 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:30:02] "GET /health HTTP/1.1" 200 -
2025-05-21 11:30:02,508 - __main__ - INFO - Received load_model request
2025-05-21 11:30:02,508 - __main__ - DEBUG - Request data: {'checkpoint_dir': '/app/data/gs_model/checkpoints'}
2025-05-21 11:30:02,509 - __main__ - INFO - Loading NeRF model from checkpoint: /app/data/gs_model/checkpoints
2025-05-21 11:30:03,375 - __main__ - INFO - Resuming from checkpoint /app/data/gs_model/checkpoints/025000
2025-05-21 11:30:03,378 - accelerate.accelerator - INFO - Loading states from /app/data/gs_model/checkpoints/025000
2025-05-21 11:30:33,155 - __main__ - ERROR - Error loading NeRF model: Error(s) in loading state_dict for Model:
	size mismatch for bil_grids.0.grids: copying a param with shape torch.Size([49, 12, 8, 16, 16]) from checkpoint, the shape in current model is torch.Size([1, 12, 8, 16, 16]).
	size mismatch for bil_grids.1.grids: copying a param with shape torch.Size([49, 12, 8, 16, 16]) from checkpoint, the shape in current model is torch.Size([1, 12, 8, 16, 16]).
	size mismatch for bil_grids.2.grids: copying a param with shape torch.Size([49, 12, 8, 16, 16]) from checkpoint, the shape in current model is torch.Size([1, 12, 8, 16, 16]).
2025-05-21 11:30:33,156 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 93, in load_nerf_model
    step = checkpoints.restore_checkpoint(checkpoint_dir, accelerator, logger)
  File "/app/bilarf/internal/checkpoints.py", line 25, in restore_checkpoint
    accelerator.load_state(path, strict=strict)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/accelerate/accelerator.py", line 3471, in load_state
    override_attributes = load_accelerator_state(
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/accelerate/checkpointing.py", line 226, in load_accelerator_state
    load_model(model, input_model_file, device=str(map_location), **load_model_func_kwargs)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/safetensors/torch.py", line 205, in load_model
    missing, unexpected = model.load_state_dict(state_dict, strict=False)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/nn/modules/module.py", line 2584, in load_state_dict
    raise RuntimeError(
RuntimeError: Error(s) in loading state_dict for Model:
	size mismatch for bil_grids.0.grids: copying a param with shape torch.Size([49, 12, 8, 16, 16]) from checkpoint, the shape in current model is torch.Size([1, 12, 8, 16, 16]).
	size mismatch for bil_grids.1.grids: copying a param with shape torch.Size([49, 12, 8, 16, 16]) from checkpoint, the shape in current model is torch.Size([1, 12, 8, 16, 16]).
	size mismatch for bil_grids.2.grids: copying a param with shape torch.Size([49, 12, 8, 16, 16]) from checkpoint, the shape in current model is torch.Size([1, 12, 8, 16, 16]).

2025-05-21 11:30:33,194 - __main__ - ERROR - Failed to load NeRF model
2025-05-21 11:30:33,195 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:30:33] "[35m[1mPOST /load_model HTTP/1.1[0m" 500 -
2025-05-21 11:38:13,422 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-21 11:38:13,422 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-21 11:38:13,422 - __main__ - INFO - CUDA available: True
2025-05-21 11:38:13,422 - __main__ - INFO - CUDA version: 12.1
2025-05-21 11:38:13,443 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-21 11:38:13,443 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-21 11:38:13,443 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-21 11:38:13,445 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-21 11:38:13,447 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-21 11:38:13,447 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 11:38:16,557 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:38:16] "GET /health HTTP/1.1" 200 -
2025-05-21 11:38:42,305 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:38:42] "GET /health HTTP/1.1" 200 -
2025-05-21 11:38:42,309 - __main__ - INFO - Received load_model request
2025-05-21 11:38:42,310 - __main__ - DEBUG - Request data: {'checkpoint_dir': '/app/data/gs_model/checkpoints'}
2025-05-21 11:38:42,311 - __main__ - INFO - Loading NeRF model from checkpoint: /app/data/gs_model/checkpoints
2025-05-21 11:38:42,867 - __main__ - ERROR - Error loading NeRF model: prepare() got an unexpected keyword argument 'strict'
2025-05-21 11:38:42,867 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 90, in load_nerf_model
    nerf_model = accelerator.prepare(nerf_model, accelerator, logger, strict=False)
TypeError: prepare() got an unexpected keyword argument 'strict'

2025-05-21 11:38:42,867 - __main__ - ERROR - Failed to load NeRF model
2025-05-21 11:38:42,868 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:38:42] "[35m[1mPOST /load_model HTTP/1.1[0m" 500 -
2025-05-21 11:39:39,126 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-21 11:39:39,126 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-21 11:39:39,126 - __main__ - INFO - CUDA available: True
2025-05-21 11:39:39,126 - __main__ - INFO - CUDA version: 12.1
2025-05-21 11:39:39,151 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-21 11:39:39,151 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-21 11:39:39,151 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-21 11:39:39,154 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-21 11:39:39,156 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-21 11:39:39,156 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 11:39:40,314 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:39:40] "GET /health HTTP/1.1" 200 -
2025-05-21 11:40:08,692 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:40:08] "GET /health HTTP/1.1" 200 -
2025-05-21 11:40:08,698 - __main__ - INFO - Received load_model request
2025-05-21 11:40:08,699 - __main__ - DEBUG - Request data: {'checkpoint_dir': '/app/data/gs_model/checkpoints'}
2025-05-21 11:40:08,707 - __main__ - INFO - Loading NeRF model from checkpoint: /app/data/gs_model/checkpoints
2025-05-21 11:40:09,486 - __main__ - ERROR - Error loading NeRF model: 'Config' object has no attribute 'checkpoint_dir'
2025-05-21 11:40:09,487 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 93, in load_nerf_model
    step = checkpoints.restore_checkpoint(config.checkpoint_dir, accelerator, logger, strict=config.load_state_dict_strict)
AttributeError: 'Config' object has no attribute 'checkpoint_dir'

2025-05-21 11:40:09,487 - __main__ - ERROR - Failed to load NeRF model
2025-05-21 11:40:09,487 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:40:09] "[35m[1mPOST /load_model HTTP/1.1[0m" 500 -
2025-05-21 11:41:08,307 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-21 11:41:08,307 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-21 11:41:08,307 - __main__ - INFO - CUDA available: True
2025-05-21 11:41:08,307 - __main__ - INFO - CUDA version: 12.1
2025-05-21 11:41:08,334 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-21 11:41:08,334 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-21 11:41:08,334 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-21 11:41:08,336 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-21 11:41:08,339 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-21 11:41:08,339 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 11:41:11,480 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:41:11] "GET /health HTTP/1.1" 200 -
2025-05-21 11:41:41,170 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:41:41] "GET /health HTTP/1.1" 200 -
2025-05-21 11:41:41,176 - __main__ - INFO - Received load_model request
2025-05-21 11:41:41,176 - __main__ - DEBUG - Request data: {'checkpoint_dir': '/app/data/gs_model/checkpoints'}
2025-05-21 11:41:41,178 - __main__ - INFO - Loading NeRF model from checkpoint: /app/data/gs_model/checkpoints
2025-05-21 11:41:41,954 - __main__ - INFO - Resuming from checkpoint /app/data/gs_model/checkpoints/025000
2025-05-21 11:41:41,955 - accelerate.accelerator - INFO - Loading states from /app/data/gs_model/checkpoints/025000
2025-05-21 11:42:12,442 - __main__ - ERROR - Error loading NeRF model: Error(s) in loading state_dict for Model:
	size mismatch for bil_grids.0.grids: copying a param with shape torch.Size([49, 12, 8, 16, 16]) from checkpoint, the shape in current model is torch.Size([1, 12, 8, 16, 16]).
	size mismatch for bil_grids.1.grids: copying a param with shape torch.Size([49, 12, 8, 16, 16]) from checkpoint, the shape in current model is torch.Size([1, 12, 8, 16, 16]).
	size mismatch for bil_grids.2.grids: copying a param with shape torch.Size([49, 12, 8, 16, 16]) from checkpoint, the shape in current model is torch.Size([1, 12, 8, 16, 16]).
2025-05-21 11:42:12,443 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 93, in load_nerf_model
    step = checkpoints.restore_checkpoint(checkpoint_dir, accelerator, logger, strict=config.load_state_dict_strict)
  File "/app/bilarf/internal/checkpoints.py", line 25, in restore_checkpoint
    accelerator.load_state(path, strict=strict)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/accelerate/accelerator.py", line 3471, in load_state
    override_attributes = load_accelerator_state(
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/accelerate/checkpointing.py", line 226, in load_accelerator_state
    load_model(model, input_model_file, device=str(map_location), **load_model_func_kwargs)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/safetensors/torch.py", line 205, in load_model
    missing, unexpected = model.load_state_dict(state_dict, strict=False)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/nn/modules/module.py", line 2584, in load_state_dict
    raise RuntimeError(
RuntimeError: Error(s) in loading state_dict for Model:
	size mismatch for bil_grids.0.grids: copying a param with shape torch.Size([49, 12, 8, 16, 16]) from checkpoint, the shape in current model is torch.Size([1, 12, 8, 16, 16]).
	size mismatch for bil_grids.1.grids: copying a param with shape torch.Size([49, 12, 8, 16, 16]) from checkpoint, the shape in current model is torch.Size([1, 12, 8, 16, 16]).
	size mismatch for bil_grids.2.grids: copying a param with shape torch.Size([49, 12, 8, 16, 16]) from checkpoint, the shape in current model is torch.Size([1, 12, 8, 16, 16]).

2025-05-21 11:42:12,482 - __main__ - ERROR - Failed to load NeRF model
2025-05-21 11:42:12,483 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:42:12] "[35m[1mPOST /load_model HTTP/1.1[0m" 500 -
2025-05-21 11:44:10,274 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-21 11:44:10,274 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-21 11:44:10,274 - __main__ - INFO - CUDA available: True
2025-05-21 11:44:10,274 - __main__ - INFO - CUDA version: 12.1
2025-05-21 11:44:10,291 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-21 11:44:10,291 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-21 11:44:10,291 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-21 11:44:10,293 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-21 11:44:10,295 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-21 11:44:10,295 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 11:44:14,779 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:44:14] "GET /health HTTP/1.1" 200 -
2025-05-21 11:44:50,136 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:44:50] "GET /health HTTP/1.1" 200 -
2025-05-21 11:44:50,142 - __main__ - INFO - Received load_model request
2025-05-21 11:44:50,142 - __main__ - DEBUG - Request data: {'checkpoint_dir': '/app/data/gs_model/checkpoints'}
2025-05-21 11:44:50,143 - __main__ - INFO - Loading NeRF model from checkpoint: /app/data/gs_model/checkpoints
2025-05-21 11:44:50,912 - __main__ - INFO - Resuming from checkpoint /app/data/gs_model/checkpoints/025000
2025-05-21 11:44:50,914 - accelerate.accelerator - INFO - Loading states from /app/data/gs_model/checkpoints/025000
2025-05-21 11:45:26,765 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-21 11:45:26,766 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-21 11:45:26,766 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-21 11:45:26,766 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-21 11:45:26,777 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-21 11:45:26,781 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-21 11:45:26,781 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-21 11:45:26,781 - __main__ - INFO - NeRF model loaded successfully
2025-05-21 11:45:26,781 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:45:26] "POST /load_model HTTP/1.1" 200 -
2025-05-21 11:45:26,790 - __main__ - INFO - Received render request
2025-05-21 11:45:26,790 - __main__ - DEBUG - Request data: {'camera': {'R': [[-0.27759927621910657, 0.23361400281048864, -0.9318600428892149], [-0.24689544331805172, 0.9200556268163129, 0.3042043451899139], [0.928429470617672, 0.3145189044469387, -0.1977285432963248]], 'T': [3.457859746156021, 0.27516621166480776, 2.8918472058788605], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 11:45:26,790 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 11:45:55,062 - __main__ - INFO - Rendering view
2025-05-21 11:45:55,297 - __main__ - DEBUG - Starting rendering process
2025-05-21 11:45:55,305 - __main__ - ERROR - Error rendering view: shape '[12215325, -1]' is invalid for input of size 3
2025-05-21 11:45:55,306 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 184, in render_nerf_view
    rendering = models.render_image(nerf_model, accelerator, ray_batch, False, 1, config)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/app/bilarf/internal/models.py", line 701, in render_image
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
  File "/app/bilarf/internal/models.py", line 701, in <dictcomp>
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
RuntimeError: shape '[12215325, -1]' is invalid for input of size 3

2025-05-21 11:45:55,306 - __main__ - ERROR - Failed to render image
2025-05-21 11:45:55,311 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:45:55] "[35m[1mPOST /render HTTP/1.1[0m" 500 -
2025-05-21 11:45:55,327 - __main__ - INFO - Received render request
2025-05-21 11:45:55,328 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9376473891447893, -0.08142445281036995, 0.33791630933485867], [-0.008552702287508453, 0.9664760151212983, 0.2566144257029156], [-0.3474826972865574, -0.243503943869063, 0.9055173131457348]], 'T': [-3.2915952539141036, -0.45497653479734507, 2.6857863324289277], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 11:45:55,328 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 11:46:12,753 - __main__ - INFO - Rendering view
2025-05-21 11:46:12,977 - __main__ - DEBUG - Starting rendering process
2025-05-21 11:46:12,978 - __main__ - ERROR - Error rendering view: shape '[12215325, -1]' is invalid for input of size 3
2025-05-21 11:46:12,978 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 184, in render_nerf_view
    rendering = models.render_image(nerf_model, accelerator, ray_batch, False, 1, config)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/app/bilarf/internal/models.py", line 701, in render_image
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
  File "/app/bilarf/internal/models.py", line 701, in <dictcomp>
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
RuntimeError: shape '[12215325, -1]' is invalid for input of size 3

2025-05-21 11:46:12,978 - __main__ - ERROR - Failed to render image
2025-05-21 11:46:12,983 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:46:12] "[35m[1mPOST /render HTTP/1.1[0m" 500 -
2025-05-21 11:46:12,993 - __main__ - INFO - Received render request
2025-05-21 11:46:12,993 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 11:46:12,993 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 11:46:22,898 - __main__ - INFO - Rendering view
2025-05-21 11:46:23,143 - __main__ - DEBUG - Starting rendering process
2025-05-21 11:46:23,144 - __main__ - ERROR - Error rendering view: shape '[12215325, -1]' is invalid for input of size 3
2025-05-21 11:46:23,144 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 184, in render_nerf_view
    rendering = models.render_image(nerf_model, accelerator, ray_batch, False, 1, config)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/app/bilarf/internal/models.py", line 701, in render_image
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
  File "/app/bilarf/internal/models.py", line 701, in <dictcomp>
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
RuntimeError: shape '[12215325, -1]' is invalid for input of size 3

2025-05-21 11:46:23,145 - __main__ - ERROR - Failed to render image
2025-05-21 11:46:23,149 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:46:23] "[35m[1mPOST /render HTTP/1.1[0m" 500 -
2025-05-21 11:46:23,171 - __main__ - INFO - Received render request
2025-05-21 11:46:23,172 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.7918841545771086, 0.22998010676491068, -0.5657107354665442], [-0.09962012436120019, 0.9626157310020985, 0.2518864530885976], [0.6024909265308126, -0.14310871713384737, 0.7851907911637446]], 'T': [-0.5360248553175342, -0.22897243954873078, 0.650788200166235], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 11:46:23,172 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 11:46:35,805 - __main__ - INFO - Rendering view
2025-05-21 11:46:36,042 - __main__ - DEBUG - Starting rendering process
2025-05-21 11:46:36,043 - __main__ - ERROR - Error rendering view: shape '[12215325, -1]' is invalid for input of size 3
2025-05-21 11:46:36,043 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 184, in render_nerf_view
    rendering = models.render_image(nerf_model, accelerator, ray_batch, False, 1, config)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/app/bilarf/internal/models.py", line 701, in render_image
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
  File "/app/bilarf/internal/models.py", line 701, in <dictcomp>
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
RuntimeError: shape '[12215325, -1]' is invalid for input of size 3

2025-05-21 11:46:36,043 - __main__ - ERROR - Failed to render image
2025-05-21 11:46:36,046 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 11:46:36] "[35m[1mPOST /render HTTP/1.1[0m" 500 -
2025-05-21 12:55:46,254 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-21 12:55:46,254 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-21 12:55:46,255 - __main__ - INFO - CUDA available: True
2025-05-21 12:55:46,255 - __main__ - INFO - CUDA version: 12.1
2025-05-21 12:55:46,301 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-21 12:55:46,301 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-21 12:55:46,301 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-21 12:55:46,304 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-21 12:55:46,306 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-21 12:55:46,307 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 12:55:50,581 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 12:55:50] "GET /health HTTP/1.1" 200 -
2025-05-21 12:56:23,141 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 12:56:23] "GET /health HTTP/1.1" 200 -
2025-05-21 12:56:23,147 - __main__ - INFO - Received load_model request
2025-05-21 12:56:23,147 - __main__ - DEBUG - Request data: {'checkpoint_dir': '/app/data/gs_model/checkpoints'}
2025-05-21 12:56:23,152 - __main__ - INFO - Loading NeRF model from checkpoint: /app/data/gs_model/checkpoints
2025-05-21 12:56:24,056 - __main__ - INFO - Resuming from checkpoint /app/data/gs_model/checkpoints/025000
2025-05-21 12:56:24,061 - accelerate.accelerator - INFO - Loading states from /app/data/gs_model/checkpoints/025000
2025-05-21 12:57:05,469 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-21 12:57:05,469 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-21 12:57:05,469 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-21 12:57:05,469 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-21 12:57:05,492 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-21 12:57:05,503 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-21 12:57:05,503 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-21 12:57:05,503 - __main__ - INFO - NeRF model loaded successfully
2025-05-21 12:57:05,504 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 12:57:05] "POST /load_model HTTP/1.1" 200 -
2025-05-21 12:57:05,516 - __main__ - INFO - Received render request
2025-05-21 12:57:05,516 - __main__ - DEBUG - Request data: {'camera': {'R': [[-0.27759927621910657, 0.23361400281048864, -0.9318600428892149], [-0.24689544331805172, 0.9200556268163129, 0.3042043451899139], [0.928429470617672, 0.3145189044469387, -0.1977285432963248]], 'T': [3.457859746156021, 0.27516621166480776, 2.8918472058788605], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 12:57:05,516 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 12:57:10,798 - __main__ - INFO - Rendering view
2025-05-21 12:57:10,987 - __main__ - DEBUG - Starting rendering process
2025-05-21 12:57:10,989 - __main__ - ERROR - Error rendering view: shape '[4065, 3005, -1]' is invalid for input of size 3
2025-05-21 12:57:10,989 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 196, in render_nerf_view
    ray_batch_reshaped = {
  File "/app/bilarf/blender/server.py", line 197, in <dictcomp>
    k: v.reshape(height, width, -1) if v is not None else None
RuntimeError: shape '[4065, 3005, -1]' is invalid for input of size 3

2025-05-21 12:57:10,989 - __main__ - ERROR - Failed to render image
2025-05-21 12:57:10,994 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 12:57:10] "[35m[1mPOST /render HTTP/1.1[0m" 500 -
2025-05-21 12:57:11,022 - __main__ - INFO - Received render request
2025-05-21 12:57:11,023 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9376473891447893, -0.08142445281036995, 0.33791630933485867], [-0.008552702287508453, 0.9664760151212983, 0.2566144257029156], [-0.3474826972865574, -0.243503943869063, 0.9055173131457348]], 'T': [-3.2915952539141036, -0.45497653479734507, 2.6857863324289277], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 12:57:11,023 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 12:57:15,923 - __main__ - INFO - Rendering view
2025-05-21 12:57:16,164 - __main__ - DEBUG - Starting rendering process
2025-05-21 12:57:16,165 - __main__ - ERROR - Error rendering view: shape '[4065, 3005, -1]' is invalid for input of size 3
2025-05-21 12:57:16,165 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 196, in render_nerf_view
    ray_batch_reshaped = {
  File "/app/bilarf/blender/server.py", line 197, in <dictcomp>
    k: v.reshape(height, width, -1) if v is not None else None
RuntimeError: shape '[4065, 3005, -1]' is invalid for input of size 3

2025-05-21 12:57:16,165 - __main__ - ERROR - Failed to render image
2025-05-21 12:57:16,170 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 12:57:16] "[35m[1mPOST /render HTTP/1.1[0m" 500 -
2025-05-21 12:57:16,183 - __main__ - INFO - Received render request
2025-05-21 12:57:16,183 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 12:57:16,183 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 12:57:20,812 - __main__ - INFO - Rendering view
2025-05-21 12:57:21,031 - __main__ - DEBUG - Starting rendering process
2025-05-21 12:57:21,032 - __main__ - ERROR - Error rendering view: shape '[4065, 3005, -1]' is invalid for input of size 3
2025-05-21 12:57:21,032 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 196, in render_nerf_view
    ray_batch_reshaped = {
  File "/app/bilarf/blender/server.py", line 197, in <dictcomp>
    k: v.reshape(height, width, -1) if v is not None else None
RuntimeError: shape '[4065, 3005, -1]' is invalid for input of size 3

2025-05-21 12:57:21,032 - __main__ - ERROR - Failed to render image
2025-05-21 12:57:21,038 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 12:57:21] "[35m[1mPOST /render HTTP/1.1[0m" 500 -
2025-05-21 12:57:21,046 - __main__ - INFO - Received render request
2025-05-21 12:57:21,046 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.7918841545771086, 0.22998010676491068, -0.5657107354665442], [-0.09962012436120019, 0.9626157310020985, 0.2518864530885976], [0.6024909265308126, -0.14310871713384737, 0.7851907911637446]], 'T': [-0.5360248553175342, -0.22897243954873078, 0.650788200166235], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 12:57:21,046 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 12:57:25,814 - __main__ - INFO - Rendering view
2025-05-21 12:57:25,974 - __main__ - DEBUG - Starting rendering process
2025-05-21 12:57:25,974 - __main__ - ERROR - Error rendering view: shape '[4065, 3005, -1]' is invalid for input of size 3
2025-05-21 12:57:25,974 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 196, in render_nerf_view
    ray_batch_reshaped = {
  File "/app/bilarf/blender/server.py", line 197, in <dictcomp>
    k: v.reshape(height, width, -1) if v is not None else None
RuntimeError: shape '[4065, 3005, -1]' is invalid for input of size 3

2025-05-21 12:57:25,974 - __main__ - ERROR - Failed to render image
2025-05-21 12:57:25,979 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 12:57:25] "[35m[1mPOST /render HTTP/1.1[0m" 500 -
2025-05-21 13:02:38,871 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-21 13:02:38,872 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-21 13:02:38,872 - __main__ - INFO - CUDA available: True
2025-05-21 13:02:38,872 - __main__ - INFO - CUDA version: 12.1
2025-05-21 13:02:38,893 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-21 13:02:38,893 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-21 13:02:38,894 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-21 13:02:38,894 - __main__ - INFO - Loading config: configs/train.gin
2025-05-21 13:02:38,896 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-21 13:02:38,898 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-21 13:02:38,899 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 13:02:44,957 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 13:02:44] "GET /health HTTP/1.1" 200 -
2025-05-21 13:03:11,181 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 13:03:11] "GET /health HTTP/1.1" 200 -
2025-05-21 13:03:11,189 - __main__ - INFO - Received load_model request
2025-05-21 13:03:11,190 - __main__ - DEBUG - Request data: {'checkpoint_dir': '/app/data/gs_model/checkpoints'}
2025-05-21 13:03:11,192 - __main__ - INFO - Loading NeRF model from checkpoint: /app/data/gs_model/checkpoints
2025-05-21 13:03:11,980 - __main__ - INFO - Resuming from checkpoint /app/data/gs_model/checkpoints/025000
2025-05-21 13:03:11,981 - accelerate.accelerator - INFO - Loading states from /app/data/gs_model/checkpoints/025000
2025-05-21 13:03:37,350 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-21 13:03:37,351 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-21 13:03:37,351 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-21 13:03:37,351 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-21 13:03:37,361 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-21 13:03:37,363 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-21 13:03:37,364 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-21 13:03:37,364 - __main__ - INFO - NeRF model loaded successfully
2025-05-21 13:03:37,364 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 13:03:37] "POST /load_model HTTP/1.1" 200 -
2025-05-21 13:03:37,369 - __main__ - INFO - Received render request
2025-05-21 13:03:37,370 - __main__ - DEBUG - Request data: {'camera': {'R': [[-0.27759927621910657, 0.23361400281048864, -0.9318600428892149], [-0.24689544331805172, 0.9200556268163129, 0.3042043451899139], [0.928429470617672, 0.3145189044469387, -0.1977285432963248]], 'T': [3.457859746156021, 0.27516621166480776, 2.8918472058788605], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 13:03:37,370 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 13:03:46,265 - __main__ - INFO - Rendering view
2025-05-21 13:03:46,547 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:03:46,548 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:03:46,548 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:03:46,548 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:46,548 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-21 13:03:46,548 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:46,548 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:46,548 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:46,548 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:46,548 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([1, 3])
2025-05-21 13:03:46,548 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-21 13:03:46,549 - __main__ - ERROR - Error during rendering: shape '[12215325, -1]' is invalid for input of size 3
2025-05-21 13:03:46,550 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 281, in render_image
    rendering = render_image_from_rays(ray_batch, height, width, config, nerf_model, accelerator)
  File "/app/bilarf/blender/server.py", line 189, in render_image_from_rays
    rendering = models.render_image(
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/app/bilarf/internal/models.py", line 701, in render_image
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
  File "/app/bilarf/internal/models.py", line 701, in <dictcomp>
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
RuntimeError: shape '[12215325, -1]' is invalid for input of size 3

2025-05-21 13:03:46,554 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 13:03:46] "[35m[1mPOST /render HTTP/1.1[0m" 500 -
2025-05-21 13:03:46,560 - __main__ - INFO - Received render request
2025-05-21 13:03:46,561 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9376473891447893, -0.08142445281036995, 0.33791630933485867], [-0.008552702287508453, 0.9664760151212983, 0.2566144257029156], [-0.3474826972865574, -0.243503943869063, 0.9055173131457348]], 'T': [-3.2915952539141036, -0.45497653479734507, 2.6857863324289277], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 13:03:46,561 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 13:03:51,945 - __main__ - INFO - Rendering view
2025-05-21 13:03:52,138 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:03:52,138 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:03:52,138 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:03:52,139 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:52,139 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-21 13:03:52,139 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:52,139 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:52,139 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:52,139 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:52,139 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([1, 3])
2025-05-21 13:03:52,139 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-21 13:03:52,139 - __main__ - ERROR - Error during rendering: shape '[12215325, -1]' is invalid for input of size 3
2025-05-21 13:03:52,140 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 281, in render_image
    rendering = render_image_from_rays(ray_batch, height, width, config, nerf_model, accelerator)
  File "/app/bilarf/blender/server.py", line 189, in render_image_from_rays
    rendering = models.render_image(
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/app/bilarf/internal/models.py", line 701, in render_image
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
  File "/app/bilarf/internal/models.py", line 701, in <dictcomp>
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
RuntimeError: shape '[12215325, -1]' is invalid for input of size 3

2025-05-21 13:03:52,146 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 13:03:52] "[35m[1mPOST /render HTTP/1.1[0m" 500 -
2025-05-21 13:03:52,160 - __main__ - INFO - Received render request
2025-05-21 13:03:52,160 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 13:03:52,160 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 13:03:57,207 - __main__ - INFO - Rendering view
2025-05-21 13:03:57,469 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:03:57,469 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:03:57,469 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:03:57,469 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:57,469 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-21 13:03:57,469 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:57,469 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:57,469 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:57,469 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:03:57,469 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([1, 3])
2025-05-21 13:03:57,469 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-21 13:03:57,470 - __main__ - ERROR - Error during rendering: shape '[12215325, -1]' is invalid for input of size 3
2025-05-21 13:03:57,470 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 281, in render_image
    rendering = render_image_from_rays(ray_batch, height, width, config, nerf_model, accelerator)
  File "/app/bilarf/blender/server.py", line 189, in render_image_from_rays
    rendering = models.render_image(
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/app/bilarf/internal/models.py", line 701, in render_image
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
  File "/app/bilarf/internal/models.py", line 701, in <dictcomp>
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
RuntimeError: shape '[12215325, -1]' is invalid for input of size 3

2025-05-21 13:03:57,475 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 13:03:57] "[35m[1mPOST /render HTTP/1.1[0m" 500 -
2025-05-21 13:03:57,481 - __main__ - INFO - Received render request
2025-05-21 13:03:57,481 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.7918841545771086, 0.22998010676491068, -0.5657107354665442], [-0.09962012436120019, 0.9626157310020985, 0.2518864530885976], [0.6024909265308126, -0.14310871713384737, 0.7851907911637446]], 'T': [-0.5360248553175342, -0.22897243954873078, 0.650788200166235], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 13:03:57,481 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 13:04:02,262 - __main__ - INFO - Rendering view
2025-05-21 13:04:02,511 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:04:02,511 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:04:02,511 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:04:02,512 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:04:02,512 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-21 13:04:02,512 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:04:02,512 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:04:02,512 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:04:02,512 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:04:02,512 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([1, 3])
2025-05-21 13:04:02,512 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-21 13:04:02,512 - __main__ - ERROR - Error during rendering: shape '[12215325, -1]' is invalid for input of size 3
2025-05-21 13:04:02,513 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 281, in render_image
    rendering = render_image_from_rays(ray_batch, height, width, config, nerf_model, accelerator)
  File "/app/bilarf/blender/server.py", line 189, in render_image_from_rays
    rendering = models.render_image(
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/app/bilarf/internal/models.py", line 701, in render_image
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
  File "/app/bilarf/internal/models.py", line 701, in <dictcomp>
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
RuntimeError: shape '[12215325, -1]' is invalid for input of size 3

2025-05-21 13:04:02,518 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 13:04:02] "[35m[1mPOST /render HTTP/1.1[0m" 500 -
2025-05-21 13:19:15,874 - __main__ - INFO - Loading NeRF model from checkpoint: exp/test_apr29_1/checkpoints
2025-05-21 13:19:17,242 - __main__ - INFO - Resuming from checkpoint exp/test_apr29_1/checkpoints/025000
2025-05-21 13:19:17,244 - accelerate.accelerator - INFO - Loading states from exp/test_apr29_1/checkpoints/025000
2025-05-21 13:19:17,468 - __main__ - ERROR - Error loading NeRF model: Error(s) in loading state_dict for Model:
	size mismatch for prop_mlp_0.encoder.embeddings: copying a param with shape torch.Size([6606952, 1]) from checkpoint, the shape in current model is torch.Size([6606952, 4]).
	size mismatch for prop_mlp_0.density_layer.0.weight: copying a param with shape torch.Size([64, 6]) from checkpoint, the shape in current model is torch.Size([64, 24]).
	size mismatch for prop_mlp_0.density_layer.2.weight: copying a param with shape torch.Size([1, 64]) from checkpoint, the shape in current model is torch.Size([256, 64]).
	size mismatch for prop_mlp_0.density_layer.2.bias: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for prop_mlp_1.encoder.embeddings: copying a param with shape torch.Size([10801256, 1]) from checkpoint, the shape in current model is torch.Size([10801256, 4]).
	size mismatch for prop_mlp_1.density_layer.0.weight: copying a param with shape torch.Size([64, 8]) from checkpoint, the shape in current model is torch.Size([64, 32]).
	size mismatch for prop_mlp_1.density_layer.2.weight: copying a param with shape torch.Size([1, 64]) from checkpoint, the shape in current model is torch.Size([256, 64]).
	size mismatch for prop_mlp_1.density_layer.2.bias: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([256]).
2025-05-21 13:19:17,471 - __main__ - ERROR - Traceback (most recent call last):
  File "/tmp/ipykernel_92867/3328509380.py", line 31, in load_nerf_model
    step = checkpoints.restore_checkpoint(checkpoint_dir, accelerator, logger, strict=config.load_state_dict_strict)
  File "/app/bilarf/internal/checkpoints.py", line 25, in restore_checkpoint
    accelerator.load_state(path, strict=strict)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/accelerate/accelerator.py", line 3471, in load_state
    override_attributes = load_accelerator_state(
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/accelerate/checkpointing.py", line 226, in load_accelerator_state
    load_model(model, input_model_file, device=str(map_location), **load_model_func_kwargs)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/safetensors/torch.py", line 205, in load_model
    missing, unexpected = model.load_state_dict(state_dict, strict=False)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/nn/modules/module.py", line 2584, in load_state_dict
    raise RuntimeError(
RuntimeError: Error(s) in loading state_dict for Model:
	size mismatch for prop_mlp_0.encoder.embeddings: copying a param with shape torch.Size([6606952, 1]) from checkpoint, the shape in current model is torch.Size([6606952, 4]).
	size mismatch for prop_mlp_0.density_layer.0.weight: copying a param with shape torch.Size([64, 6]) from checkpoint, the shape in current model is torch.Size([64, 24]).
	size mismatch for prop_mlp_0.density_layer.2.weight: copying a param with shape torch.Size([1, 64]) from checkpoint, the shape in current model is torch.Size([256, 64]).
	size mismatch for prop_mlp_0.density_layer.2.bias: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for prop_mlp_1.encoder.embeddings: copying a param with shape torch.Size([10801256, 1]) from checkpoint, the shape in current model is torch.Size([10801256, 4]).
	size mismatch for prop_mlp_1.density_layer.0.weight: copying a param with shape torch.Size([64, 8]) from checkpoint, the shape in current model is torch.Size([64, 32]).
	size mismatch for prop_mlp_1.density_layer.2.weight: copying a param with shape torch.Size([1, 64]) from checkpoint, the shape in current model is torch.Size([256, 64]).
	size mismatch for prop_mlp_1.density_layer.2.bias: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([256]).

2025-05-21 13:22:26,017 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-21 13:22:26,017 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-21 13:22:26,017 - __main__ - INFO - CUDA available: True
2025-05-21 13:22:26,017 - __main__ - INFO - CUDA version: 12.1
2025-05-21 13:22:26,038 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-21 13:22:26,039 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-21 13:22:26,039 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-21 13:22:26,039 - __main__ - INFO - Loading config: configs/train.gin
2025-05-21 13:22:26,041 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-21 13:22:26,044 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-21 13:22:26,044 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 13:22:51,876 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-21 13:22:51,876 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-21 13:22:51,876 - __main__ - INFO - CUDA available: True
2025-05-21 13:22:51,876 - __main__ - INFO - CUDA version: 12.1
2025-05-21 13:22:51,897 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-21 13:22:51,897 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-21 13:22:51,897 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-21 13:22:51,897 - __main__ - INFO - Loading config: configs/train.gin
2025-05-21 13:22:51,899 - __main__ - INFO - Loading NeRF model from checkpoint: exp/test_apr29_1/checkpoints
2025-05-21 13:22:53,176 - __main__ - INFO - Resuming from checkpoint exp/test_apr29_1/checkpoints/025000
2025-05-21 13:22:53,176 - accelerate.accelerator - INFO - Loading states from exp/test_apr29_1/checkpoints/025000
2025-05-21 13:22:53,401 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-21 13:22:53,401 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-21 13:22:53,401 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-21 13:22:53,401 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-21 13:22:53,406 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-21 13:22:53,407 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-21 13:22:53,407 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-21 13:22:53,407 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-21 13:22:53,410 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-21 13:22:53,410 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 13:23:30,767 - __main__ - INFO - Loading NeRF model from checkpoint: exp/test_apr29_1/checkpoints
2025-05-21 13:23:32,220 - __main__ - INFO - Resuming from checkpoint exp/test_apr29_1/checkpoints/025000
2025-05-21 13:23:32,222 - accelerate.accelerator - INFO - Loading states from exp/test_apr29_1/checkpoints/025000
2025-05-21 13:23:32,390 - __main__ - ERROR - Error loading NeRF model: Error(s) in loading state_dict for Model:
	size mismatch for prop_mlp_0.encoder.embeddings: copying a param with shape torch.Size([6606952, 1]) from checkpoint, the shape in current model is torch.Size([6606952, 4]).
	size mismatch for prop_mlp_0.density_layer.0.weight: copying a param with shape torch.Size([64, 6]) from checkpoint, the shape in current model is torch.Size([64, 24]).
	size mismatch for prop_mlp_0.density_layer.2.weight: copying a param with shape torch.Size([1, 64]) from checkpoint, the shape in current model is torch.Size([256, 64]).
	size mismatch for prop_mlp_0.density_layer.2.bias: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for prop_mlp_1.encoder.embeddings: copying a param with shape torch.Size([10801256, 1]) from checkpoint, the shape in current model is torch.Size([10801256, 4]).
	size mismatch for prop_mlp_1.density_layer.0.weight: copying a param with shape torch.Size([64, 8]) from checkpoint, the shape in current model is torch.Size([64, 32]).
	size mismatch for prop_mlp_1.density_layer.2.weight: copying a param with shape torch.Size([1, 64]) from checkpoint, the shape in current model is torch.Size([256, 64]).
	size mismatch for prop_mlp_1.density_layer.2.bias: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([256]).
2025-05-21 13:23:32,391 - __main__ - ERROR - Traceback (most recent call last):
  File "/tmp/ipykernel_92867/3328509380.py", line 31, in load_nerf_model
    step = checkpoints.restore_checkpoint(checkpoint_dir, accelerator, logger, strict=config.load_state_dict_strict)
  File "/app/bilarf/internal/checkpoints.py", line 25, in restore_checkpoint
    accelerator.load_state(path, strict=strict)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/accelerate/accelerator.py", line 3471, in load_state
    override_attributes = load_accelerator_state(
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/accelerate/checkpointing.py", line 226, in load_accelerator_state
    load_model(model, input_model_file, device=str(map_location), **load_model_func_kwargs)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/safetensors/torch.py", line 205, in load_model
    missing, unexpected = model.load_state_dict(state_dict, strict=False)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/nn/modules/module.py", line 2584, in load_state_dict
    raise RuntimeError(
RuntimeError: Error(s) in loading state_dict for Model:
	size mismatch for prop_mlp_0.encoder.embeddings: copying a param with shape torch.Size([6606952, 1]) from checkpoint, the shape in current model is torch.Size([6606952, 4]).
	size mismatch for prop_mlp_0.density_layer.0.weight: copying a param with shape torch.Size([64, 6]) from checkpoint, the shape in current model is torch.Size([64, 24]).
	size mismatch for prop_mlp_0.density_layer.2.weight: copying a param with shape torch.Size([1, 64]) from checkpoint, the shape in current model is torch.Size([256, 64]).
	size mismatch for prop_mlp_0.density_layer.2.bias: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for prop_mlp_1.encoder.embeddings: copying a param with shape torch.Size([10801256, 1]) from checkpoint, the shape in current model is torch.Size([10801256, 4]).
	size mismatch for prop_mlp_1.density_layer.0.weight: copying a param with shape torch.Size([64, 8]) from checkpoint, the shape in current model is torch.Size([64, 32]).
	size mismatch for prop_mlp_1.density_layer.2.weight: copying a param with shape torch.Size([1, 64]) from checkpoint, the shape in current model is torch.Size([256, 64]).
	size mismatch for prop_mlp_1.density_layer.2.bias: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([256]).

2025-05-21 13:23:58,024 - __main__ - INFO - Loading NeRF model from checkpoint: exp/test_apr29_1/checkpoints
2025-05-21 13:23:58,991 - __main__ - INFO - Resuming from checkpoint exp/test_apr29_1/checkpoints/025000
2025-05-21 13:23:58,993 - accelerate.accelerator - INFO - Loading states from exp/test_apr29_1/checkpoints/025000
2025-05-21 13:23:59,110 - __main__ - ERROR - Error loading NeRF model: Error(s) in loading state_dict for Model:
	size mismatch for prop_mlp_0.encoder.embeddings: copying a param with shape torch.Size([6606952, 1]) from checkpoint, the shape in current model is torch.Size([6606952, 4]).
	size mismatch for prop_mlp_0.density_layer.0.weight: copying a param with shape torch.Size([64, 6]) from checkpoint, the shape in current model is torch.Size([64, 24]).
	size mismatch for prop_mlp_0.density_layer.2.weight: copying a param with shape torch.Size([1, 64]) from checkpoint, the shape in current model is torch.Size([256, 64]).
	size mismatch for prop_mlp_0.density_layer.2.bias: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for prop_mlp_1.encoder.embeddings: copying a param with shape torch.Size([10801256, 1]) from checkpoint, the shape in current model is torch.Size([10801256, 4]).
	size mismatch for prop_mlp_1.density_layer.0.weight: copying a param with shape torch.Size([64, 8]) from checkpoint, the shape in current model is torch.Size([64, 32]).
	size mismatch for prop_mlp_1.density_layer.2.weight: copying a param with shape torch.Size([1, 64]) from checkpoint, the shape in current model is torch.Size([256, 64]).
	size mismatch for prop_mlp_1.density_layer.2.bias: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([256]).
2025-05-21 13:23:59,111 - __main__ - ERROR - Traceback (most recent call last):
  File "/tmp/ipykernel_92867/3328509380.py", line 31, in load_nerf_model
    step = checkpoints.restore_checkpoint(checkpoint_dir, accelerator, logger, strict=config.load_state_dict_strict)
  File "/app/bilarf/internal/checkpoints.py", line 25, in restore_checkpoint
    accelerator.load_state(path, strict=strict)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/accelerate/accelerator.py", line 3471, in load_state
    override_attributes = load_accelerator_state(
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/accelerate/checkpointing.py", line 226, in load_accelerator_state
    load_model(model, input_model_file, device=str(map_location), **load_model_func_kwargs)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/safetensors/torch.py", line 205, in load_model
    missing, unexpected = model.load_state_dict(state_dict, strict=False)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/nn/modules/module.py", line 2584, in load_state_dict
    raise RuntimeError(
RuntimeError: Error(s) in loading state_dict for Model:
	size mismatch for prop_mlp_0.encoder.embeddings: copying a param with shape torch.Size([6606952, 1]) from checkpoint, the shape in current model is torch.Size([6606952, 4]).
	size mismatch for prop_mlp_0.density_layer.0.weight: copying a param with shape torch.Size([64, 6]) from checkpoint, the shape in current model is torch.Size([64, 24]).
	size mismatch for prop_mlp_0.density_layer.2.weight: copying a param with shape torch.Size([1, 64]) from checkpoint, the shape in current model is torch.Size([256, 64]).
	size mismatch for prop_mlp_0.density_layer.2.bias: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for prop_mlp_1.encoder.embeddings: copying a param with shape torch.Size([10801256, 1]) from checkpoint, the shape in current model is torch.Size([10801256, 4]).
	size mismatch for prop_mlp_1.density_layer.0.weight: copying a param with shape torch.Size([64, 8]) from checkpoint, the shape in current model is torch.Size([64, 32]).
	size mismatch for prop_mlp_1.density_layer.2.weight: copying a param with shape torch.Size([1, 64]) from checkpoint, the shape in current model is torch.Size([256, 64]).
	size mismatch for prop_mlp_1.density_layer.2.bias: copying a param with shape torch.Size([1]) from checkpoint, the shape in current model is torch.Size([256]).

2025-05-21 13:24:54,588 - __main__ - INFO - Loading NeRF model from checkpoint: exp/test_apr29_1/checkpoints
2025-05-21 13:24:55,684 - __main__ - ERROR - Error loading NeRF model: 'NoneType' object has no attribute 'load_state_dict_strict'
2025-05-21 13:24:55,685 - __main__ - ERROR - Traceback (most recent call last):
  File "/tmp/ipykernel_92867/3328509380.py", line 31, in load_nerf_model
    step = checkpoints.restore_checkpoint(checkpoint_dir, accelerator, logger, strict=config.load_state_dict_strict)
AttributeError: 'NoneType' object has no attribute 'load_state_dict_strict'

2025-05-21 13:25:22,906 - __main__ - INFO - Loading NeRF model from checkpoint: exp/test_apr29_1/checkpoints
2025-05-21 13:25:23,499 - __main__ - INFO - Resuming from checkpoint exp/test_apr29_1/checkpoints/025000
2025-05-21 13:25:23,500 - accelerate.accelerator - INFO - Loading states from exp/test_apr29_1/checkpoints/025000
2025-05-21 13:25:23,646 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-21 13:25:23,647 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-21 13:25:23,648 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-21 13:25:23,648 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-21 13:25:23,657 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-21 13:25:23,659 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-21 13:25:23,660 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-21 13:39:32,200 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 13:39:32,201 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 13:39:44,812 - __main__ - INFO - Rendering view
2025-05-21 13:39:45,107 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:39:45,108 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:39:45,109 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:39:45,110 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:39:45,110 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-21 13:39:45,112 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:39:45,113 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:39:45,114 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:39:45,115 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:39:45,116 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([1, 3])
2025-05-21 13:39:45,117 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-21 13:59:04,374 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 13:59:04,376 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 13:59:16,637 - __main__ - INFO - Rendering view
2025-05-21 13:59:16,889 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:59:16,890 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:59:16,891 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 13:59:16,891 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:59:16,892 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-21 13:59:16,893 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:59:16,893 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:59:16,894 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:59:16,895 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-21 13:59:16,895 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([1, 3])
2025-05-21 13:59:16,896 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-21 14:01:44,210 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 14:01:44,212 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 14:01:50,769 - __main__ - INFO - Rendering view
2025-05-21 14:07:07,801 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 14:07:07,803 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 14:07:14,280 - __main__ - INFO - Rendering view
2025-05-21 14:09:51,304 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 14:09:51,307 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 14:09:58,023 - __main__ - INFO - Rendering view
2025-05-21 14:10:34,832 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 14:10:34,834 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 14:10:41,489 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:10:41,490 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:10:41,491 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:10:41,491 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:10:41,492 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-21 14:10:41,493 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:10:41,494 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:10:41,494 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:10:41,495 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:10:41,496 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:10:41,497 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-21 14:10:41,504 - __main__ - INFO - Rendering view
2025-05-21 14:17:31,711 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 14:17:31,713 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 14:17:41,960 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:17:41,962 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:17:41,963 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:17:41,964 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:17:41,964 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-21 14:17:41,965 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:17:41,966 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:17:41,967 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:17:41,969 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:17:41,970 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:17:41,970 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-21 14:17:41,981 - __main__ - INFO - Rendering view
2025-05-21 14:20:03,231 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 14:20:03,233 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 14:20:08,712 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:20:08,714 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:20:08,714 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:20:08,715 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:20:08,716 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-21 14:20:08,717 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:20:08,717 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:20:08,719 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:20:08,720 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:20:08,720 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:20:08,721 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-21 14:20:08,730 - __main__ - INFO - Rendering view
2025-05-21 14:22:59,895 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 14:22:59,898 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 14:23:05,252 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:23:05,253 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:23:05,254 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:23:05,255 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:23:05,255 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-21 14:23:05,256 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:23:05,257 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:23:05,257 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:23:05,258 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:23:05,259 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:23:05,260 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-21 14:23:05,269 - __main__ - INFO - Rendering view
2025-05-21 14:24:23,118 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 14:24:23,122 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 14:24:28,478 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:24:28,480 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:24:28,480 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:24:28,481 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:24:28,482 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-21 14:24:28,482 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:24:28,483 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:24:28,484 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:24:28,484 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-21 14:24:28,485 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 14:24:28,486 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-21 14:24:28,497 - __main__ - INFO - Rendering view
2025-05-21 14:45:50,509 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9626989163163523, 0.06779656864407466, -0.2619435469779899], [-0.013388295335922467, 0.9788496743178496, 0.20414227547433175], [0.27024350144142084, -0.19302056980521304, 0.9432452011861773]], 'T': [-1.6188473779833676, -0.44302212544135333, 1.0618425644523661], 'focal': 1773.2944910750875, 'width': 1000, 'height': 1200}}
2025-05-21 14:45:50,511 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 14:45:51,162 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([1200, 1000, 3])
2025-05-21 14:45:51,163 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([1200, 1000, 3])
2025-05-21 14:45:51,164 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([1200, 1000, 3])
2025-05-21 14:45:51,164 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([1200, 1000, 1])
2025-05-21 14:45:51,165 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([1200, 1000, 2])
2025-05-21 14:45:51,166 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([1200, 1000, 1])
2025-05-21 14:45:51,167 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([1200, 1000, 1])
2025-05-21 14:45:51,168 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([1200, 1000, 1])
2025-05-21 14:45:51,169 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([1200, 1000, 1])
2025-05-21 14:45:51,169 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([1200, 1000, 3])
2025-05-21 14:45:51,170 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([1200, 1000, 2])
2025-05-21 14:45:51,178 - __main__ - INFO - Rendering view
2025-05-21 14:55:39,818 - __main__ - INFO - Rendering completed successfully
2025-05-21 15:09:44,575 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-21 15:09:44,575 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-21 15:09:44,575 - __main__ - INFO - CUDA available: True
2025-05-21 15:09:44,575 - __main__ - INFO - CUDA version: 12.1
2025-05-21 15:09:44,606 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-21 15:09:44,606 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-21 15:09:44,607 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-21 15:09:44,607 - __main__ - INFO - Loading config: configs/train.gin
2025-05-21 15:09:44,610 - __main__ - INFO - Loading NeRF model from checkpoint: exp/test_apr29_1/checkpoints
2025-05-21 15:09:45,761 - __main__ - INFO - Resuming from checkpoint exp/test_apr29_1/checkpoints/025000
2025-05-21 15:09:45,762 - accelerate.accelerator - INFO - Loading states from exp/test_apr29_1/checkpoints/025000
2025-05-21 15:09:50,588 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-21 15:09:50,588 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-21 15:09:50,588 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-21 15:09:50,588 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-21 15:09:50,593 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-21 15:09:50,594 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-21 15:09:50,594 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-21 15:09:50,594 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-21 15:09:50,596 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-21 15:09:50,596 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-21 15:10:14,272 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 15:10:14] "GET /health HTTP/1.1" 200 -
2025-05-21 15:10:14,283 - __main__ - INFO - Received render request
2025-05-21 15:10:14,283 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9376473891447893, -0.08142445281036995, 0.33791630933485867], [-0.008552702287508453, 0.9664760151212983, 0.2566144257029156], [-0.3474826972865574, -0.243503943869063, 0.9055173131457348]], 'T': [-3.2915952539141036, -0.45497653479734507, 2.6857863324289277], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-21 15:10:14,283 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 15:10:24,402 - __main__ - INFO - Rendering view
2025-05-21 15:10:25,032 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-21 15:10:25,032 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-21 15:10:25,032 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-21 15:10:25,032 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-21 15:10:25,032 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-21 15:10:25,032 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-21 15:10:25,032 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-21 15:10:25,032 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-21 15:10:25,032 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-21 15:10:25,032 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([1, 3])
2025-05-21 15:10:25,032 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-21 15:10:25,036 - __main__ - ERROR - Error during rendering: shape '[12215325, -1]' is invalid for input of size 3
2025-05-21 15:10:25,037 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 281, in render_image
    rendering = render_image_from_rays(ray_batch, height, width, config, nerf_model, accelerator)
  File "/app/bilarf/blender/server.py", line 189, in render_image_from_rays
    rendering = models.render_image(
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/app/bilarf/internal/models.py", line 701, in render_image
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
  File "/app/bilarf/internal/models.py", line 701, in <dictcomp>
    batch = {k: v.reshape((num_rays, -1)) for k, v in batch.items() if v is not None}
RuntimeError: shape '[12215325, -1]' is invalid for input of size 3

2025-05-21 15:10:25,043 - werkzeug - INFO - 172.17.0.1 - - [21/May/2025 15:10:25] "[35m[1mPOST /render HTTP/1.1[0m" 500 -
2025-05-21 15:10:46,245 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9376473891447893, -0.08142445281036995, 0.33791630933485867], [-0.008552702287508453, 0.9664760151212983, 0.2566144257029156], [-0.3474826972865574, -0.243503943869063, 0.9055173131457348]], 'T': [-3.2915952539141036, -0.45497653479734507, 2.6857863324289277], 'focal': 1773.2944910750875, 'width': 1000, 'height': 1200}}
2025-05-21 15:10:46,247 - __main__ - INFO - Creating rays from camera parameters
2025-05-21 15:10:46,740 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([1200, 1000, 3])
2025-05-21 15:10:46,742 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([1200, 1000, 3])
2025-05-21 15:10:46,742 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([1200, 1000, 3])
2025-05-21 15:10:46,743 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([1200, 1000, 1])
2025-05-21 15:10:46,743 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([1200, 1000, 2])
2025-05-21 15:10:46,744 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([1200, 1000, 1])
2025-05-21 15:10:46,745 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([1200, 1000, 1])
2025-05-21 15:10:46,746 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([1200, 1000, 1])
2025-05-21 15:10:46,747 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([1200, 1000, 1])
2025-05-21 15:10:46,747 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([1200, 1000, 3])
2025-05-21 15:10:46,748 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([1200, 1000, 2])
2025-05-21 15:10:46,749 - __main__ - INFO - Rendering view
2025-05-21 15:23:50,577 - __main__ - INFO - Rendering completed successfully
2025-05-22 08:39:58,191 - __main__ - INFO - Loading NeRF model from checkpoint: exp/test_apr29_1/checkpoints
2025-05-22 08:39:59,145 - __main__ - INFO - Resuming from checkpoint exp/test_apr29_1/checkpoints/025000
2025-05-22 08:39:59,147 - accelerate.accelerator - INFO - Loading states from exp/test_apr29_1/checkpoints/025000
2025-05-22 08:40:00,719 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-22 08:40:00,720 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-22 08:40:00,721 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-22 08:40:00,722 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-22 08:40:00,728 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-22 08:40:00,729 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-22 08:40:00,730 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-22 08:50:12,847 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9376473891447893, -0.08142445281036995, 0.33791630933485867], [-0.008552702287508453, 0.9664760151212983, 0.2566144257029156], [-0.3474826972865574, -0.243503943869063, 0.9055173131457348]], 'T': [-3.2915952539141036, -0.45497653479734507, 2.6857863324289277], 'focal': 1773.2944910750875, 'width': 1000, 'height': 1200}}
2025-05-22 08:50:12,849 - __main__ - INFO - Creating rays from camera parameters
2025-05-22 08:50:13,350 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([1200, 1000, 3])
2025-05-22 08:50:13,351 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([1200, 1000, 3])
2025-05-22 08:50:13,351 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([1200, 1000, 3])
2025-05-22 08:50:13,352 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([1200, 1000, 1])
2025-05-22 08:50:13,353 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([1200, 1000, 2])
2025-05-22 08:50:13,353 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([1200, 1000, 1])
2025-05-22 08:50:13,354 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([1200, 1000, 1])
2025-05-22 08:50:13,355 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([1200, 1000, 1])
2025-05-22 08:50:13,356 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([1200, 1000, 1])
2025-05-22 08:50:13,356 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([1200, 1000, 3])
2025-05-22 08:50:13,357 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([1200, 1000, 2])
2025-05-22 08:50:13,358 - __main__ - INFO - Rendering view
2025-05-22 08:50:24,559 - __main__ - INFO - Rendering completed successfully
2025-05-22 08:59:03,450 - matplotlib - DEBUG - CACHEDIR=/root/.cache/matplotlib
2025-05-22 08:59:03,451 - matplotlib.font_manager - DEBUG - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
2025-05-22 08:59:03,969 - matplotlib.pyplot - DEBUG - Loaded backend module://matplotlib_inline.backend_inline version unknown.
2025-05-22 08:59:03,972 - matplotlib.pyplot - DEBUG - Loaded backend module://matplotlib_inline.backend_inline version unknown.
2025-05-22 08:59:03,978 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-05-22 08:59:03,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:03,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:03,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-22 08:59:03,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-22 08:59:03,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:03,983 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:03,984 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:03,985 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-22 08:59:03,985 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:03,986 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-05-22 08:59:03,987 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:03,988 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:03,989 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:03,991 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:03,992 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:03,994 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-05-22 08:59:03,995 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:03,996 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:03,997 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:03,998 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,000 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,000 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,001 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-22 08:59:04,002 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,003 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,004 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-22 08:59:04,005 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,006 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-22 08:59:04,007 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-22 08:59:04,007 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-22 08:59:04,008 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,009 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,009 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-05-22 08:59:04,011 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,011 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,013 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,014 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-05-22 08:59:04,015 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,016 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,017 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,018 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,020 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-05-22 08:59:04,020 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,021 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-05-22 08:59:04,022 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-05-22 08:59:04,066 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-05-22 08:59:04,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,069 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,070 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-22 08:59:04,071 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-22 08:59:04,072 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,073 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-22 08:59:04,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-05-22 08:59:04,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-05-22 08:59:04,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-22 08:59:04,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-22 08:59:04,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-05-22 08:59:04,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-22 08:59:04,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-05-22 08:59:04,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-05-22 08:59:04,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-05-22 08:59:04,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-05-22 08:59:04,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-05-22 08:59:04,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-05-22 08:59:04,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-05-22 08:59:04,104 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/opt/conda/envs/bilarf/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-05-22 09:29:00,372 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9376473891447893, -0.08142445281036995, 0.33791630933485867], [-0.008552702287508453, 0.9664760151212983, 0.2566144257029156], [-0.3474826972865574, -0.243503943869063, 0.9055173131457348]], 'T': [-3.2915952539141036, -0.45497653479734507, 2.6857863324289277], 'focal': 1773.2944910750875, 'width': 1000, 'height': 1200}}
2025-05-22 09:29:00,375 - __main__ - INFO - Creating rays from camera parameters
2025-05-22 09:29:00,939 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([1200, 1000, 3])
2025-05-22 09:29:00,941 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([1200, 1000, 3])
2025-05-22 09:29:00,943 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([1200, 1000, 3])
2025-05-22 09:29:00,943 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([1200, 1000, 1])
2025-05-22 09:29:00,944 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([1200, 1000, 2])
2025-05-22 09:29:00,945 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([1200, 1000, 1])
2025-05-22 09:29:00,946 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([1200, 1000, 1])
2025-05-22 09:29:00,947 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([1200, 1000, 1])
2025-05-22 09:29:00,948 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([1200, 1000, 1])
2025-05-22 09:29:00,949 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([1200, 1000, 3])
2025-05-22 09:29:00,950 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([1200, 1000, 2])
2025-05-22 09:29:00,951 - __main__ - INFO - Rendering view
2025-05-22 09:29:08,739 - __main__ - INFO - Rendering completed successfully
2025-05-22 09:29:22,050 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9376473891447893, -0.08142445281036995, 0.33791630933485867], [-0.008552702287508453, 0.9664760151212983, 0.2566144257029156], [-0.3474826972865574, -0.243503943869063, 0.9055173131457348]], 'T': [-3.2915952539141036, -0.45497653479734507, 2.6857863324289277], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-22 09:29:22,052 - __main__ - INFO - Creating rays from camera parameters
2025-05-22 09:29:38,214 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-22 09:29:38,215 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-22 09:29:38,216 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-22 09:29:38,216 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-22 09:29:38,217 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-22 09:29:38,218 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-22 09:29:38,218 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-22 09:29:38,219 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-22 09:29:38,219 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-22 09:29:38,220 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([4065, 3005, 3])
2025-05-22 09:29:38,220 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-22 09:29:38,223 - __main__ - INFO - Rendering view
2025-05-22 09:52:38,678 - __main__ - INFO - Rendering completed successfully
2025-05-22 09:54:36,927 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-22 09:54:36,928 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-22 09:54:36,928 - __main__ - INFO - CUDA available: True
2025-05-22 09:54:36,928 - __main__ - INFO - CUDA version: 12.1
2025-05-22 09:54:36,956 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-22 09:54:36,957 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-22 09:54:36,957 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-22 09:54:36,957 - __main__ - INFO - Loading config: configs/train.gin
2025-05-22 09:54:36,959 - __main__ - INFO - Loading NeRF model from checkpoint: exp/test_apr29_1/checkpoints
2025-05-22 09:54:38,504 - __main__ - INFO - Resuming from checkpoint exp/test_apr29_1/checkpoints/025000
2025-05-22 09:54:38,505 - accelerate.accelerator - INFO - Loading states from exp/test_apr29_1/checkpoints/025000
2025-05-22 09:54:40,025 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-22 09:54:40,025 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-22 09:54:40,025 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-22 09:54:40,025 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-22 09:54:40,032 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-22 09:54:40,033 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-22 09:54:40,033 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-22 09:54:40,033 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-22 09:54:40,036 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-22 09:54:40,037 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-22 09:54:55,768 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 09:54:55] "GET /health HTTP/1.1" 200 -
2025-05-22 09:54:55,788 - __main__ - INFO - Received render request
2025-05-22 09:54:55,789 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9376473891447893, -0.08142445281036995, 0.33791630933485867], [-0.008552702287508453, 0.9664760151212983, 0.2566144257029156], [-0.3474826972865574, -0.243503943869063, 0.9055173131457348]], 'T': [-3.2915952539141036, -0.45497653479734507, 2.6857863324289277], 'focal': 1773.2944910750875, 'width': 3005, 'height': 4065}}
2025-05-22 09:54:55,789 - __main__ - INFO - Creating rays from camera parameters
2025-05-22 09:55:35,284 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([4065, 3005, 3])
2025-05-22 09:55:35,285 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([4065, 3005, 3])
2025-05-22 09:55:35,285 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([4065, 3005, 3])
2025-05-22 09:55:35,285 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([4065, 3005, 1])
2025-05-22 09:55:35,285 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([4065, 3005, 2])
2025-05-22 09:55:35,285 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([4065, 3005, 1])
2025-05-22 09:55:35,285 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([4065, 3005, 1])
2025-05-22 09:55:35,285 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([4065, 3005, 1])
2025-05-22 09:55:35,285 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([4065, 3005, 1])
2025-05-22 09:55:35,285 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([4065, 3005, 3])
2025-05-22 09:55:35,285 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([4065, 3005, 2])
2025-05-22 09:55:35,286 - __main__ - INFO - Rendering view
2025-05-22 09:58:08,212 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-22 09:58:08,212 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-22 09:58:08,213 - __main__ - INFO - CUDA available: True
2025-05-22 09:58:08,213 - __main__ - INFO - CUDA version: 12.1
2025-05-22 09:58:08,233 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-22 09:58:08,233 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-22 09:58:08,233 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-22 09:58:08,233 - __main__ - INFO - Loading config: configs/train.gin
2025-05-22 09:58:08,235 - __main__ - INFO - Loading NeRF model from checkpoint: exp/test_apr29_1/checkpoints
2025-05-22 09:58:09,225 - __main__ - INFO - Resuming from checkpoint exp/test_apr29_1/checkpoints/025000
2025-05-22 09:58:09,226 - accelerate.accelerator - INFO - Loading states from exp/test_apr29_1/checkpoints/025000
2025-05-22 09:58:09,430 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-22 09:58:09,430 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-22 09:58:09,430 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-22 09:58:09,430 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-22 09:58:09,435 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-22 09:58:09,435 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-22 09:58:09,435 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-22 09:58:09,436 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-22 09:58:09,438 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-22 09:58:09,438 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-22 09:58:42,996 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 09:58:42] "GET /health HTTP/1.1" 200 -
2025-05-22 09:58:43,012 - __main__ - INFO - Received render request
2025-05-22 09:58:43,013 - __main__ - DEBUG - Request data: {'camera': {'R': [[0.9376473891447893, -0.08142445281036995, 0.33791630933485867], [-0.008552702287508453, 0.9664760151212983, 0.2566144257029156], [-0.3474826972865574, -0.243503943869063, 0.9055173131457348]], 'T': [-3.2915952539141036, -0.45497653479734507, 2.6857863324289277], 'focal': 1773.2944910750875, 'width': 1000, 'height': 1200}}
2025-05-22 09:58:43,013 - __main__ - INFO - Creating rays from camera parameters
2025-05-22 09:58:43,536 - __main__ - DEBUG - Ray batch tensor 'origins' has shape torch.Size([1200, 1000, 3])
2025-05-22 09:58:43,537 - __main__ - DEBUG - Ray batch tensor 'directions' has shape torch.Size([1200, 1000, 3])
2025-05-22 09:58:43,537 - __main__ - DEBUG - Ray batch tensor 'viewdirs' has shape torch.Size([1200, 1000, 3])
2025-05-22 09:58:43,537 - __main__ - DEBUG - Ray batch tensor 'radii' has shape torch.Size([1200, 1000, 1])
2025-05-22 09:58:43,537 - __main__ - DEBUG - Ray batch tensor 'imageplane' has shape torch.Size([1200, 1000, 2])
2025-05-22 09:58:43,537 - __main__ - DEBUG - Ray batch tensor 'lossmult' has shape torch.Size([1200, 1000, 1])
2025-05-22 09:58:43,537 - __main__ - DEBUG - Ray batch tensor 'near' has shape torch.Size([1200, 1000, 1])
2025-05-22 09:58:43,537 - __main__ - DEBUG - Ray batch tensor 'far' has shape torch.Size([1200, 1000, 1])
2025-05-22 09:58:43,537 - __main__ - DEBUG - Ray batch tensor 'cam_idx' has shape torch.Size([1200, 1000, 1])
2025-05-22 09:58:43,537 - __main__ - DEBUG - Ray batch tensor 'cam_dirs' has shape torch.Size([1200, 1000, 3])
2025-05-22 09:58:43,537 - __main__ - DEBUG - Ray batch tensor 'pix_xy' has shape torch.Size([1200, 1000, 2])
2025-05-22 09:58:43,537 - __main__ - INFO - Rendering view
2025-05-22 09:58:53,267 - __main__ - INFO - Rendering completed successfully
2025-05-22 09:58:53,267 - __main__ - INFO - Pickling render result
2025-05-22 09:58:53,445 - __main__ - INFO - Sending pickled data (28800350 bytes)
2025-05-22 09:58:53,451 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 09:58:53] "POST /render HTTP/1.1" 200 -
2025-05-22 12:18:26,036 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:18:26] "GET /health HTTP/1.1" 200 -
2025-05-22 12:18:26,081 - __main__ - INFO - Received load_model request
2025-05-22 12:18:26,083 - __main__ - DEBUG - Request data: {'checkpoint_path': '/app/data/nerf_model/checkpoints.zip'}
2025-05-22 12:18:26,083 - __main__ - ERROR - Missing checkpoint_dir parameter
2025-05-22 12:18:26,084 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:18:26] "[31m[1mPOST /load_model HTTP/1.1[0m" 400 -
2025-05-22 12:21:19,072 - __main__ - INFO - Python version: 3.9.21 (main, Dec 11 2024, 16:24:11) 
[GCC 11.2.0]
2025-05-22 12:21:19,072 - __main__ - INFO - PyTorch version: 2.5.1+cu121
2025-05-22 12:21:19,072 - __main__ - INFO - CUDA available: True
2025-05-22 12:21:19,072 - __main__ - INFO - CUDA version: 12.1
2025-05-22 12:21:19,111 - __main__ - INFO - GPU: NVIDIA GeForce RTX 3090
2025-05-22 12:21:19,111 - __main__ - INFO - Current working directory: /app/bilarf
2025-05-22 12:21:19,111 - __main__ - INFO - sys.path: ['internal/pycolmap/pycolmap', 'internal/pycolmap', '/app/bilarf/blender', '/opt/conda/envs/bilarf/lib/python39.zip', '/opt/conda/envs/bilarf/lib/python3.9', '/opt/conda/envs/bilarf/lib/python3.9/lib-dynload', '/opt/conda/envs/bilarf/lib/python3.9/site-packages', '/app/bilarf']
2025-05-22 12:21:19,111 - __main__ - INFO - Loading config: configs/train.gin
2025-05-22 12:21:19,113 - __main__ - INFO - Starting server on 0.0.0.0:5000
2025-05-22 12:21:19,115 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.3:5000
2025-05-22 12:21:19,115 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-05-22 12:22:10,711 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:22:10] "GET /health HTTP/1.1" 200 -
2025-05-22 12:22:10,725 - __main__ - INFO - Received load_model request
2025-05-22 12:22:10,725 - __main__ - DEBUG - Request data: {'checkpoint_path': '/app/data/nerf_model/checkpoints.zip'}
2025-05-22 12:22:10,727 - __main__ - INFO - Loading NeRF model from: /app/data/nerf_model/checkpoints.zip
2025-05-22 12:22:10,733 - __main__ - INFO - Extracting ZIP checkpoint: /app/data/nerf_model/checkpoints.zip
2025-05-22 12:22:10,733 - __main__ - INFO - Created temporary directory: /tmp/nerf_checkpoint_z98w2u4q
2025-05-22 12:22:37,008 - __main__ - INFO - Using checkpoint directory: /tmp/nerf_checkpoint_z98w2u4q/checkpoints
2025-05-22 12:22:37,009 - __main__ - DEBUG - Checkpoint directory contents: ['point_cloud.ply', '025000']
2025-05-22 12:22:37,958 - __main__ - INFO - Resuming from checkpoint /tmp/nerf_checkpoint_z98w2u4q/checkpoints/point_cloud.ply
2025-05-22 12:22:37,959 - __main__ - ERROR - Error loading NeRF model: Tried to find /tmp/nerf_checkpoint_z98w2u4q/checkpoints/point_cloud.ply but folder does not exist
2025-05-22 12:22:37,961 - __main__ - ERROR - Traceback (most recent call last):
  File "/app/bilarf/blender/server.py", line 171, in load_nerf_model
  File "/app/bilarf/internal/checkpoints.py", line 25, in restore_checkpoint
    accelerator.load_state(path, strict=strict)
  File "/opt/conda/envs/bilarf/lib/python3.9/site-packages/accelerate/accelerator.py", line 3396, in load_state
    raise ValueError(f"Tried to find {input_dir} but folder does not exist")
ValueError: Tried to find /tmp/nerf_checkpoint_z98w2u4q/checkpoints/point_cloud.ply but folder does not exist

2025-05-22 12:22:37,961 - __main__ - ERROR - Failed to load NeRF model
2025-05-22 12:22:37,962 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:22:37] "[35m[1mPOST /load_model HTTP/1.1[0m" 500 -
2025-05-22 12:26:22,030 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:26:22] "GET /health HTTP/1.1" 200 -
2025-05-22 12:26:22,036 - __main__ - INFO - Received load_model request
2025-05-22 12:26:22,036 - __main__ - DEBUG - Request data: {'checkpoint_path': '/app/data/nerf_model/checkpoints.zip'}
2025-05-22 12:26:22,037 - __main__ - INFO - Loading NeRF model from: /app/data/nerf_model/checkpoints.zip
2025-05-22 12:26:22,038 - __main__ - INFO - Extracting ZIP checkpoint: /app/data/nerf_model/checkpoints.zip
2025-05-22 12:26:22,188 - __main__ - INFO - Cleaned up previous temporary directory: /tmp/nerf_checkpoint_z98w2u4q
2025-05-22 12:26:22,189 - __main__ - INFO - Created temporary directory: /tmp/nerf_checkpoint_t0ksm_95
2025-05-22 12:26:48,296 - __main__ - INFO - Using checkpoint directory: /tmp/nerf_checkpoint_t0ksm_95/checkpoints
2025-05-22 12:26:48,296 - __main__ - DEBUG - Checkpoint directory contents: ['025000']
2025-05-22 12:26:49,038 - __main__ - INFO - Resuming from checkpoint /tmp/nerf_checkpoint_t0ksm_95/checkpoints/025000
2025-05-22 12:26:49,038 - accelerate.accelerator - INFO - Loading states from /tmp/nerf_checkpoint_t0ksm_95/checkpoints/025000
2025-05-22 12:26:49,176 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-22 12:26:49,176 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-22 12:26:49,176 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-22 12:26:49,176 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-22 12:26:49,181 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-22 12:26:49,181 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-22 12:26:49,181 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-22 12:26:49,181 - __main__ - INFO - NeRF model loaded successfully
2025-05-22 12:26:49,182 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:26:49] "POST /load_model HTTP/1.1" 200 -
2025-05-22 12:31:12,831 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:31:12] "GET /health HTTP/1.1" 200 -
2025-05-22 12:31:12,837 - __main__ - INFO - Received load_model request
2025-05-22 12:31:12,837 - __main__ - DEBUG - Request data: {'checkpoint_path': '/app/data/nerf_model/checkpoints.zip'}
2025-05-22 12:31:12,839 - __main__ - INFO - Loading NeRF model from: /app/data/nerf_model/checkpoints.zip
2025-05-22 12:31:12,840 - __main__ - INFO - Extracting ZIP checkpoint: /app/data/nerf_model/checkpoints.zip
2025-05-22 12:31:12,977 - __main__ - INFO - Cleaned up previous temporary directory: /tmp/nerf_checkpoint_t0ksm_95
2025-05-22 12:31:12,978 - __main__ - INFO - Created temporary directory: /tmp/nerf_checkpoint__3f9y44h
2025-05-22 12:31:36,085 - __main__ - INFO - Using checkpoint directory: /tmp/nerf_checkpoint__3f9y44h/checkpoints
2025-05-22 12:31:36,085 - __main__ - DEBUG - Checkpoint directory contents: ['025000']
2025-05-22 12:31:36,775 - __main__ - INFO - Resuming from checkpoint /tmp/nerf_checkpoint__3f9y44h/checkpoints/025000
2025-05-22 12:31:36,776 - accelerate.accelerator - INFO - Loading states from /tmp/nerf_checkpoint__3f9y44h/checkpoints/025000
2025-05-22 12:31:36,960 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-22 12:31:36,960 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-22 12:31:36,960 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-22 12:31:36,960 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-22 12:31:36,963 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-22 12:31:36,963 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-22 12:31:36,963 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-22 12:31:36,963 - __main__ - INFO - NeRF model loaded successfully
2025-05-22 12:31:36,964 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:31:36] "POST /load_model HTTP/1.1" 200 -
2025-05-22 12:34:09,371 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:34:09] "GET /health HTTP/1.1" 200 -
2025-05-22 12:34:09,379 - __main__ - INFO - Received load_model request
2025-05-22 12:34:09,379 - __main__ - DEBUG - Request data: {'checkpoint_path': '/app/data/nerf_model/checkpoints.zip'}
2025-05-22 12:34:09,380 - __main__ - INFO - Loading NeRF model from: /app/data/nerf_model/checkpoints.zip
2025-05-22 12:34:09,381 - __main__ - INFO - Extracting ZIP checkpoint: /app/data/nerf_model/checkpoints.zip
2025-05-22 12:34:09,535 - __main__ - INFO - Cleaned up previous temporary directory: /tmp/nerf_checkpoint__3f9y44h
2025-05-22 12:34:09,536 - __main__ - INFO - Created temporary directory: /tmp/nerf_checkpoint_ratu244b
2025-05-22 12:34:34,774 - __main__ - INFO - Using checkpoint directory: /tmp/nerf_checkpoint_ratu244b/checkpoints
2025-05-22 12:34:34,774 - __main__ - DEBUG - Checkpoint directory contents: ['025000']
2025-05-22 12:34:35,470 - __main__ - INFO - Resuming from checkpoint /tmp/nerf_checkpoint_ratu244b/checkpoints/025000
2025-05-22 12:34:35,470 - accelerate.accelerator - INFO - Loading states from /tmp/nerf_checkpoint_ratu244b/checkpoints/025000
2025-05-22 12:34:35,642 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-22 12:34:35,642 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-22 12:34:35,642 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-22 12:34:35,642 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-22 12:34:35,645 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-22 12:34:35,646 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-22 12:34:35,646 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-22 12:34:35,646 - __main__ - INFO - NeRF model loaded successfully
2025-05-22 12:34:35,646 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:34:35] "POST /load_model HTTP/1.1" 200 -
2025-05-22 12:37:35,082 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:37:35] "GET /health HTTP/1.1" 200 -
2025-05-22 12:37:35,086 - __main__ - INFO - Received load_model request
2025-05-22 12:37:35,087 - __main__ - DEBUG - Request data: {'checkpoint_path': '/app/data/nerf_model/checkpoints.zip'}
2025-05-22 12:37:35,088 - __main__ - INFO - Loading NeRF model from: /app/data/nerf_model/checkpoints.zip
2025-05-22 12:37:35,089 - __main__ - INFO - Extracting ZIP checkpoint: /app/data/nerf_model/checkpoints.zip
2025-05-22 12:37:35,237 - __main__ - INFO - Cleaned up previous temporary directory: /tmp/nerf_checkpoint_ratu244b
2025-05-22 12:37:35,238 - __main__ - INFO - Created temporary directory: /tmp/nerf_checkpoint_0981aley
2025-05-22 12:37:56,050 - __main__ - INFO - Using checkpoint directory: /tmp/nerf_checkpoint_0981aley/checkpoints
2025-05-22 12:37:56,051 - __main__ - DEBUG - Checkpoint directory contents: ['025000']
2025-05-22 12:37:56,717 - __main__ - INFO - Resuming from checkpoint /tmp/nerf_checkpoint_0981aley/checkpoints/025000
2025-05-22 12:37:56,718 - accelerate.accelerator - INFO - Loading states from /tmp/nerf_checkpoint_0981aley/checkpoints/025000
2025-05-22 12:37:56,864 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-22 12:37:56,864 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-22 12:37:56,865 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-22 12:37:56,865 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-22 12:37:56,867 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-22 12:37:56,867 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-22 12:37:56,867 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-22 12:37:56,867 - __main__ - INFO - NeRF model loaded successfully
2025-05-22 12:37:56,867 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:37:56] "POST /load_model HTTP/1.1" 200 -
2025-05-22 12:38:14,055 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:38:14] "GET /health HTTP/1.1" 200 -
2025-05-22 12:42:49,838 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:42:49] "GET /health HTTP/1.1" 200 -
2025-05-22 12:42:49,844 - __main__ - INFO - Received load_model request
2025-05-22 12:42:49,845 - __main__ - DEBUG - Request data: {'checkpoint_path': '/app/data/nerf_model/checkpoints.zip'}
2025-05-22 12:42:49,848 - __main__ - INFO - Loading NeRF model from: /app/data/nerf_model/checkpoints.zip
2025-05-22 12:42:49,855 - __main__ - INFO - Extracting ZIP checkpoint: /app/data/nerf_model/checkpoints.zip
2025-05-22 12:42:49,978 - __main__ - INFO - Cleaned up previous temporary directory: /tmp/nerf_checkpoint_0981aley
2025-05-22 12:42:49,979 - __main__ - INFO - Created temporary directory: /tmp/nerf_checkpoint_fpvyyu2i
2025-05-22 12:43:19,489 - __main__ - INFO - Using checkpoint directory: /tmp/nerf_checkpoint_fpvyyu2i/checkpoints
2025-05-22 12:43:19,489 - __main__ - DEBUG - Checkpoint directory contents: ['025000']
2025-05-22 12:43:20,152 - __main__ - INFO - Resuming from checkpoint /tmp/nerf_checkpoint_fpvyyu2i/checkpoints/025000
2025-05-22 12:43:20,152 - accelerate.accelerator - INFO - Loading states from /tmp/nerf_checkpoint_fpvyyu2i/checkpoints/025000
2025-05-22 12:43:20,317 - accelerate.checkpointing - INFO - All model weights loaded successfully
2025-05-22 12:43:20,317 - accelerate.checkpointing - INFO - All optimizer states loaded successfully
2025-05-22 12:43:20,317 - accelerate.checkpointing - INFO - All scheduler states loaded successfully
2025-05-22 12:43:20,317 - accelerate.checkpointing - INFO - All dataloader sampler states loaded successfully
2025-05-22 12:43:20,320 - accelerate.checkpointing - INFO - All random states loaded successfully
2025-05-22 12:43:20,320 - accelerate.accelerator - INFO - Loading in 0 custom states
2025-05-22 12:43:20,320 - __main__ - INFO - Successfully loaded NeRF model from checkpoint at step 25000
2025-05-22 12:43:20,320 - __main__ - INFO - NeRF model loaded successfully
2025-05-22 12:43:20,321 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:43:20] "POST /load_model HTTP/1.1" 200 -
2025-05-22 12:45:10,815 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:45:10] "GET /health HTTP/1.1" 200 -
2025-05-22 12:51:06,082 - werkzeug - INFO - 172.17.0.1 - - [22/May/2025 12:51:06] "GET /health HTTP/1.1" 200 -
